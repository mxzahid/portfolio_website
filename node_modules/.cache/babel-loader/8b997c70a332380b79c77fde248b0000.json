{"ast":null,"code":"/**\r\n * DevExtreme (esm/data/array_store.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dataUtils from \"./utils\";\nimport Query from \"./query\";\nimport { errors } from \"./errors\";\nimport Store from \"./abstract_store\";\nimport { indexByKey, insert, applyBatch, update, remove } from \"./array_utils\";\nvar ArrayStore = Store.inherit({\n  ctor: function (options) {\n    if (Array.isArray(options)) {\n      options = {\n        data: options\n      };\n    } else {\n      options = options || {};\n    }\n\n    this.callBase(options);\n    var initialArray = options.data;\n\n    if (initialArray && !Array.isArray(initialArray)) {\n      throw errors.Error(\"E4006\");\n    }\n\n    this._array = initialArray || [];\n  },\n  createQuery: function () {\n    return Query(this._array, {\n      errorHandler: this._errorHandler\n    });\n  },\n  _byKeyImpl: function (key) {\n    var index = indexByKey(this, this._array, key);\n\n    if (-1 === index) {\n      return dataUtils.rejectedPromise(errors.Error(\"E4009\"));\n    }\n\n    return dataUtils.trivialPromise(this._array[index]);\n  },\n  _insertImpl: function (values) {\n    return insert(this, this._array, values);\n  },\n  _pushImpl: function (changes) {\n    applyBatch({\n      keyInfo: this,\n      data: this._array,\n      changes: changes\n    });\n  },\n  _updateImpl: function (key, values) {\n    return update(this, this._array, key, values);\n  },\n  _removeImpl: function (key) {\n    return remove(this, this._array, key);\n  },\n  clear: function () {\n    this._eventsStrategy.fireEvent(\"modifying\");\n\n    this._array = [];\n\n    this._eventsStrategy.fireEvent(\"modified\");\n  }\n}, \"array\");\nexport default ArrayStore;","map":{"version":3,"sources":["C:/Users/Abdullah/personal-portfolio/node_modules/devextreme/esm/data/array_store.js"],"names":["dataUtils","Query","errors","Store","indexByKey","insert","applyBatch","update","remove","ArrayStore","inherit","ctor","options","Array","isArray","data","callBase","initialArray","Error","_array","createQuery","errorHandler","_errorHandler","_byKeyImpl","key","index","rejectedPromise","trivialPromise","_insertImpl","values","_pushImpl","changes","keyInfo","_updateImpl","_removeImpl","clear","_eventsStrategy","fireEvent"],"mappings":"AAAA;;;;;;;;AAQA,OAAOA,SAAP,MAAsB,SAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,MADJ,QAEO,UAFP;AAGA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SACIC,UADJ,EAEIC,MAFJ,EAGIC,UAHJ,EAIIC,MAJJ,EAKIC,MALJ,QAMO,eANP;AAOA,IAAIC,UAAU,GAAGN,KAAK,CAACO,OAAN,CAAc;AAC3BC,EAAAA,IAAI,EAAE,UAASC,OAAT,EAAkB;AACpB,QAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;AACxBA,MAAAA,OAAO,GAAG;AACNG,QAAAA,IAAI,EAAEH;AADA,OAAV;AAGH,KAJD,MAIO;AACHA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACH;;AACD,SAAKI,QAAL,CAAcJ,OAAd;AACA,QAAIK,YAAY,GAAGL,OAAO,CAACG,IAA3B;;AACA,QAAIE,YAAY,IAAI,CAACJ,KAAK,CAACC,OAAN,CAAcG,YAAd,CAArB,EAAkD;AAC9C,YAAMf,MAAM,CAACgB,KAAP,CAAa,OAAb,CAAN;AACH;;AACD,SAAKC,MAAL,GAAcF,YAAY,IAAI,EAA9B;AACH,GAf0B;AAgB3BG,EAAAA,WAAW,EAAE,YAAW;AACpB,WAAOnB,KAAK,CAAC,KAAKkB,MAAN,EAAc;AACtBE,MAAAA,YAAY,EAAE,KAAKC;AADG,KAAd,CAAZ;AAGH,GApB0B;AAqB3BC,EAAAA,UAAU,EAAE,UAASC,GAAT,EAAc;AACtB,QAAIC,KAAK,GAAGrB,UAAU,CAAC,IAAD,EAAO,KAAKe,MAAZ,EAAoBK,GAApB,CAAtB;;AACA,QAAI,CAAC,CAAD,KAAOC,KAAX,EAAkB;AACd,aAAOzB,SAAS,CAAC0B,eAAV,CAA0BxB,MAAM,CAACgB,KAAP,CAAa,OAAb,CAA1B,CAAP;AACH;;AACD,WAAOlB,SAAS,CAAC2B,cAAV,CAAyB,KAAKR,MAAL,CAAYM,KAAZ,CAAzB,CAAP;AACH,GA3B0B;AA4B3BG,EAAAA,WAAW,EAAE,UAASC,MAAT,EAAiB;AAC1B,WAAOxB,MAAM,CAAC,IAAD,EAAO,KAAKc,MAAZ,EAAoBU,MAApB,CAAb;AACH,GA9B0B;AA+B3BC,EAAAA,SAAS,EAAE,UAASC,OAAT,EAAkB;AACzBzB,IAAAA,UAAU,CAAC;AACP0B,MAAAA,OAAO,EAAE,IADF;AAEPjB,MAAAA,IAAI,EAAE,KAAKI,MAFJ;AAGPY,MAAAA,OAAO,EAAEA;AAHF,KAAD,CAAV;AAKH,GArC0B;AAsC3BE,EAAAA,WAAW,EAAE,UAAST,GAAT,EAAcK,MAAd,EAAsB;AAC/B,WAAOtB,MAAM,CAAC,IAAD,EAAO,KAAKY,MAAZ,EAAoBK,GAApB,EAAyBK,MAAzB,CAAb;AACH,GAxC0B;AAyC3BK,EAAAA,WAAW,EAAE,UAASV,GAAT,EAAc;AACvB,WAAOhB,MAAM,CAAC,IAAD,EAAO,KAAKW,MAAZ,EAAoBK,GAApB,CAAb;AACH,GA3C0B;AA4C3BW,EAAAA,KAAK,EAAE,YAAW;AACd,SAAKC,eAAL,CAAqBC,SAArB,CAA+B,WAA/B;;AACA,SAAKlB,MAAL,GAAc,EAAd;;AACA,SAAKiB,eAAL,CAAqBC,SAArB,CAA+B,UAA/B;AACH;AAhD0B,CAAd,EAiDd,OAjDc,CAAjB;AAkDA,eAAe5B,UAAf","sourcesContent":["/**\r\n * DevExtreme (esm/data/array_store.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport dataUtils from \"./utils\";\r\nimport Query from \"./query\";\r\nimport {\r\n    errors\r\n} from \"./errors\";\r\nimport Store from \"./abstract_store\";\r\nimport {\r\n    indexByKey,\r\n    insert,\r\n    applyBatch,\r\n    update,\r\n    remove\r\n} from \"./array_utils\";\r\nvar ArrayStore = Store.inherit({\r\n    ctor: function(options) {\r\n        if (Array.isArray(options)) {\r\n            options = {\r\n                data: options\r\n            }\r\n        } else {\r\n            options = options || {}\r\n        }\r\n        this.callBase(options);\r\n        var initialArray = options.data;\r\n        if (initialArray && !Array.isArray(initialArray)) {\r\n            throw errors.Error(\"E4006\")\r\n        }\r\n        this._array = initialArray || []\r\n    },\r\n    createQuery: function() {\r\n        return Query(this._array, {\r\n            errorHandler: this._errorHandler\r\n        })\r\n    },\r\n    _byKeyImpl: function(key) {\r\n        var index = indexByKey(this, this._array, key);\r\n        if (-1 === index) {\r\n            return dataUtils.rejectedPromise(errors.Error(\"E4009\"))\r\n        }\r\n        return dataUtils.trivialPromise(this._array[index])\r\n    },\r\n    _insertImpl: function(values) {\r\n        return insert(this, this._array, values)\r\n    },\r\n    _pushImpl: function(changes) {\r\n        applyBatch({\r\n            keyInfo: this,\r\n            data: this._array,\r\n            changes: changes\r\n        })\r\n    },\r\n    _updateImpl: function(key, values) {\r\n        return update(this, this._array, key, values)\r\n    },\r\n    _removeImpl: function(key) {\r\n        return remove(this, this._array, key)\r\n    },\r\n    clear: function() {\r\n        this._eventsStrategy.fireEvent(\"modifying\");\r\n        this._array = [];\r\n        this._eventsStrategy.fireEvent(\"modified\")\r\n    }\r\n}, \"array\");\r\nexport default ArrayStore;\r\n"]},"metadata":{},"sourceType":"module"}