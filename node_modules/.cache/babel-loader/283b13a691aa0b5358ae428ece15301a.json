{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/pointer.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport * as support from \"../core/utils/support\";\nimport { each } from \"../core/utils/iterator\";\nimport browser from \"../core/utils/browser\";\nimport devices from \"../core/devices\";\nimport registerEvent from \"./core/event_registrator\";\nimport TouchStrategy from \"./pointer/touch\";\nimport MsPointerStrategy from \"./pointer/mspointer\";\nimport MouseStrategy from \"./pointer/mouse\";\nimport MouseAndTouchStrategy from \"./pointer/mouse_and_touch\";\n\nvar getStrategy = (support, device, browser) => {\n  if (support.pointerEvents && browser.msie) {\n    return MsPointerStrategy;\n  }\n\n  var {\n    tablet: tablet,\n    phone: phone\n  } = device;\n\n  if (support.touch && !(tablet || phone)) {\n    return MouseAndTouchStrategy;\n  }\n\n  if (support.touch) {\n    return TouchStrategy;\n  }\n\n  return MouseStrategy;\n};\n\nvar EventStrategy = getStrategy(support, devices.real(), browser);\neach(EventStrategy.map, (pointerEvent, originalEvents) => {\n  registerEvent(pointerEvent, new EventStrategy(pointerEvent, originalEvents));\n});\nvar pointer = {\n  down: \"dxpointerdown\",\n  up: \"dxpointerup\",\n  move: \"dxpointermove\",\n  cancel: \"dxpointercancel\",\n  enter: \"dxpointerenter\",\n  leave: \"dxpointerleave\",\n  over: \"dxpointerover\",\n  out: \"dxpointerout\"\n};\nexport default pointer;","map":{"version":3,"sources":["C:/Users/Abdullah/personal-portfolio/node_modules/devextreme/esm/events/pointer.js"],"names":["support","each","browser","devices","registerEvent","TouchStrategy","MsPointerStrategy","MouseStrategy","MouseAndTouchStrategy","getStrategy","device","pointerEvents","msie","tablet","phone","touch","EventStrategy","real","map","pointerEvent","originalEvents","pointer","down","up","move","cancel","enter","leave","over","out"],"mappings":"AAAA;;;;;;;;AAQA,OAAO,KAAKA,OAAZ,MAAyB,uBAAzB;AACA,SACIC,IADJ,QAEO,wBAFP;AAGA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;;AACA,IAAIC,WAAW,GAAG,CAACT,OAAD,EAAUU,MAAV,EAAkBR,OAAlB,KAA8B;AAC5C,MAAIF,OAAO,CAACW,aAAR,IAAyBT,OAAO,CAACU,IAArC,EAA2C;AACvC,WAAON,iBAAP;AACH;;AACD,MAAI;AACAO,IAAAA,MAAM,EAAEA,MADR;AAEAC,IAAAA,KAAK,EAAEA;AAFP,MAGAJ,MAHJ;;AAIA,MAAIV,OAAO,CAACe,KAAR,IAAiB,EAAEF,MAAM,IAAIC,KAAZ,CAArB,EAAyC;AACrC,WAAON,qBAAP;AACH;;AACD,MAAIR,OAAO,CAACe,KAAZ,EAAmB;AACf,WAAOV,aAAP;AACH;;AACD,SAAOE,aAAP;AACH,CAfD;;AAgBA,IAAIS,aAAa,GAAGP,WAAW,CAACT,OAAD,EAAUG,OAAO,CAACc,IAAR,EAAV,EAA0Bf,OAA1B,CAA/B;AACAD,IAAI,CAACe,aAAa,CAACE,GAAf,EAAoB,CAACC,YAAD,EAAeC,cAAf,KAAkC;AACtDhB,EAAAA,aAAa,CAACe,YAAD,EAAe,IAAIH,aAAJ,CAAkBG,YAAlB,EAAgCC,cAAhC,CAAf,CAAb;AACH,CAFG,CAAJ;AAGA,IAAIC,OAAO,GAAG;AACVC,EAAAA,IAAI,EAAE,eADI;AAEVC,EAAAA,EAAE,EAAE,aAFM;AAGVC,EAAAA,IAAI,EAAE,eAHI;AAIVC,EAAAA,MAAM,EAAE,iBAJE;AAKVC,EAAAA,KAAK,EAAE,gBALG;AAMVC,EAAAA,KAAK,EAAE,gBANG;AAOVC,EAAAA,IAAI,EAAE,eAPI;AAQVC,EAAAA,GAAG,EAAE;AARK,CAAd;AAUA,eAAeR,OAAf","sourcesContent":["/**\r\n * DevExtreme (esm/events/pointer.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as support from \"../core/utils/support\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport browser from \"../core/utils/browser\";\r\nimport devices from \"../core/devices\";\r\nimport registerEvent from \"./core/event_registrator\";\r\nimport TouchStrategy from \"./pointer/touch\";\r\nimport MsPointerStrategy from \"./pointer/mspointer\";\r\nimport MouseStrategy from \"./pointer/mouse\";\r\nimport MouseAndTouchStrategy from \"./pointer/mouse_and_touch\";\r\nvar getStrategy = (support, device, browser) => {\r\n    if (support.pointerEvents && browser.msie) {\r\n        return MsPointerStrategy\r\n    }\r\n    var {\r\n        tablet: tablet,\r\n        phone: phone\r\n    } = device;\r\n    if (support.touch && !(tablet || phone)) {\r\n        return MouseAndTouchStrategy\r\n    }\r\n    if (support.touch) {\r\n        return TouchStrategy\r\n    }\r\n    return MouseStrategy\r\n};\r\nvar EventStrategy = getStrategy(support, devices.real(), browser);\r\neach(EventStrategy.map, (pointerEvent, originalEvents) => {\r\n    registerEvent(pointerEvent, new EventStrategy(pointerEvent, originalEvents))\r\n});\r\nvar pointer = {\r\n    down: \"dxpointerdown\",\r\n    up: \"dxpointerup\",\r\n    move: \"dxpointermove\",\r\n    cancel: \"dxpointercancel\",\r\n    enter: \"dxpointerenter\",\r\n    leave: \"dxpointerleave\",\r\n    over: \"dxpointerover\",\r\n    out: \"dxpointerout\"\r\n};\r\nexport default pointer;\r\n"]},"metadata":{},"sourceType":"module"}