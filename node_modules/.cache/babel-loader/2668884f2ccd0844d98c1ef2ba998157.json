{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/options/option_manager.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { compileGetter, compileSetter } from \"../utils/data\";\nimport { noop } from \"../utils/common\";\nimport { equals } from \"../utils/comparator\";\nimport { extend } from \"../utils/extend\";\nimport { isDefined, isPlainObject } from \"../utils/type\";\nimport { normalizeOptions } from \"./utils\";\nvar cachedGetters = {};\nvar cachedSetters = {};\nexport class OptionManager {\n  constructor(options, optionsByReference) {\n    this._options = options;\n    this._optionsByReference = optionsByReference;\n    this._changingCallback;\n    this._changedCallback;\n    this._namePreparedCallbacks;\n  }\n\n  _setByReference(options, rulesOptions) {\n    extend(true, options, rulesOptions);\n\n    for (var fieldName in this._optionsByReference) {\n      if (Object.prototype.hasOwnProperty.call(rulesOptions, fieldName)) {\n        options[fieldName] = rulesOptions[fieldName];\n      }\n    }\n  }\n\n  _setPreparedValue(name, value, merge, silent) {\n    var previousValue = this.get(this._options, name, false);\n\n    if (!equals(previousValue, value)) {\n      var path = name.split(/[.[]/);\n      !silent && this._changingCallback(name, previousValue, value);\n      cachedSetters[name] = cachedSetters[name] || compileSetter(name);\n      cachedSetters[name](this._options, value, {\n        functionsAsIs: true,\n        merge: isDefined(merge) ? merge : !this._optionsByReference[name],\n        unwrapObservables: path.length > 1 && !!this._optionsByReference[path[0]]\n      });\n      !silent && this._changedCallback(name, value, previousValue);\n    }\n  }\n\n  _prepareRelevantNames(options, name, value, silent) {\n    if (isPlainObject(value)) {\n      for (var valueName in value) {\n        this._prepareRelevantNames(options, \"\".concat(name, \".\").concat(valueName), value[valueName]);\n      }\n    }\n\n    this._namePreparedCallbacks(options, name, value, silent);\n  }\n\n  get() {\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._options;\n    var name = arguments.length > 1 ? arguments[1] : void 0;\n    var unwrapObservables = arguments.length > 2 ? arguments[2] : void 0;\n    cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n    return cachedGetters[name](options, {\n      functionsAsIs: true,\n      unwrapObservables: unwrapObservables\n    });\n  }\n\n  set(options, value, merge, silent) {\n    options = normalizeOptions(options, value);\n\n    for (var name in options) {\n      this._prepareRelevantNames(options, name, options[name], silent);\n    }\n\n    for (var _name in options) {\n      this._setPreparedValue(_name, options[_name], merge, silent);\n    }\n  }\n\n  onRelevantNamesPrepared(callBack) {\n    this._namePreparedCallbacks = callBack;\n  }\n\n  onChanging(callBack) {\n    this._changingCallback = callBack;\n  }\n\n  onChanged(callBack) {\n    this._changedCallback = callBack;\n  }\n\n  dispose() {\n    this._changingCallback = noop;\n    this._changedCallback = noop;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Abdullah/personal-portfolio/node_modules/devextreme/esm/core/options/option_manager.js"],"names":["compileGetter","compileSetter","noop","equals","extend","isDefined","isPlainObject","normalizeOptions","cachedGetters","cachedSetters","OptionManager","constructor","options","optionsByReference","_options","_optionsByReference","_changingCallback","_changedCallback","_namePreparedCallbacks","_setByReference","rulesOptions","fieldName","Object","prototype","hasOwnProperty","call","_setPreparedValue","name","value","merge","silent","previousValue","get","path","split","functionsAsIs","unwrapObservables","length","_prepareRelevantNames","valueName","concat","arguments","set","_name","onRelevantNamesPrepared","callBack","onChanging","onChanged","dispose"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/core/options/option_manager.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../utils/data\";\r\nimport {\r\n    noop\r\n} from \"../utils/common\";\r\nimport {\r\n    equals\r\n} from \"../utils/comparator\";\r\nimport {\r\n    extend\r\n} from \"../utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject\r\n} from \"../utils/type\";\r\nimport {\r\n    normalizeOptions\r\n} from \"./utils\";\r\nvar cachedGetters = {};\r\nvar cachedSetters = {};\r\nexport class OptionManager {\r\n    constructor(options, optionsByReference) {\r\n        this._options = options;\r\n        this._optionsByReference = optionsByReference;\r\n        this._changingCallback;\r\n        this._changedCallback;\r\n        this._namePreparedCallbacks\r\n    }\r\n    _setByReference(options, rulesOptions) {\r\n        extend(true, options, rulesOptions);\r\n        for (var fieldName in this._optionsByReference) {\r\n            if (Object.prototype.hasOwnProperty.call(rulesOptions, fieldName)) {\r\n                options[fieldName] = rulesOptions[fieldName]\r\n            }\r\n        }\r\n    }\r\n    _setPreparedValue(name, value, merge, silent) {\r\n        var previousValue = this.get(this._options, name, false);\r\n        if (!equals(previousValue, value)) {\r\n            var path = name.split(/[.[]/);\r\n            !silent && this._changingCallback(name, previousValue, value);\r\n            cachedSetters[name] = cachedSetters[name] || compileSetter(name);\r\n            cachedSetters[name](this._options, value, {\r\n                functionsAsIs: true,\r\n                merge: isDefined(merge) ? merge : !this._optionsByReference[name],\r\n                unwrapObservables: path.length > 1 && !!this._optionsByReference[path[0]]\r\n            });\r\n            !silent && this._changedCallback(name, value, previousValue)\r\n        }\r\n    }\r\n    _prepareRelevantNames(options, name, value, silent) {\r\n        if (isPlainObject(value)) {\r\n            for (var valueName in value) {\r\n                this._prepareRelevantNames(options, \"\".concat(name, \".\").concat(valueName), value[valueName])\r\n            }\r\n        }\r\n        this._namePreparedCallbacks(options, name, value, silent)\r\n    }\r\n    get() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._options;\r\n        var name = arguments.length > 1 ? arguments[1] : void 0;\r\n        var unwrapObservables = arguments.length > 2 ? arguments[2] : void 0;\r\n        cachedGetters[name] = cachedGetters[name] || compileGetter(name);\r\n        return cachedGetters[name](options, {\r\n            functionsAsIs: true,\r\n            unwrapObservables: unwrapObservables\r\n        })\r\n    }\r\n    set(options, value, merge, silent) {\r\n        options = normalizeOptions(options, value);\r\n        for (var name in options) {\r\n            this._prepareRelevantNames(options, name, options[name], silent)\r\n        }\r\n        for (var _name in options) {\r\n            this._setPreparedValue(_name, options[_name], merge, silent)\r\n        }\r\n    }\r\n    onRelevantNamesPrepared(callBack) {\r\n        this._namePreparedCallbacks = callBack\r\n    }\r\n    onChanging(callBack) {\r\n        this._changingCallback = callBack\r\n    }\r\n    onChanged(callBack) {\r\n        this._changedCallback = callBack\r\n    }\r\n    dispose() {\r\n        this._changingCallback = noop;\r\n        this._changedCallback = noop\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}