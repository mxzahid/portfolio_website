{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CalcPos = CalcPos;\nexports.getColor = getColor;\nexports.AutoGetLoc = AutoGetLoc; // Helps calculate new positions on drag\n\nfunction CalcPos(pos, snap, minimum) {\n  return Math.max(minimum, Math.round(pos + snap - pos % snap));\n} // Colors\n\n\nfunction getColor(color) {\n  if (color) {\n    switch (color) {\n      case 'red':\n        return {\n          p: '#d50000',\n          s: '#950000',\n          a: '#AE00D5',\n          t: 'light',\n          o: '#00c853'\n        };\n\n      case 'pink':\n        return {\n          p: '#c51162',\n          s: '#890b44',\n          a: '#7811C5',\n          t: 'light',\n          o: '#64dd17'\n        };\n\n      case 'purple':\n        return {\n          p: '#aa00ff',\n          s: '#7600b2',\n          a: '#000FFF',\n          t: 'light',\n          o: '#aeea00'\n        };\n\n      case 'deep-purple':\n        return {\n          p: '#6200ea',\n          s: '#4400a3',\n          a: '#0046EA',\n          t: 'light',\n          o: '#ffd600'\n        };\n\n      case 'indigo':\n        return {\n          p: '#304ffe',\n          s: '#2137b1',\n          a: '#30E0FE',\n          t: 'light',\n          o: '#ffab00'\n        };\n\n      case 'blue':\n        return {\n          p: '#2962ff',\n          s: '#1c44b2',\n          a: '#29F9FF',\n          t: 'light',\n          o: '#ff6d00'\n        };\n\n      case 'light-blue':\n        return {\n          p: '#0091ea',\n          s: '#0065a3',\n          a: '#00EA99',\n          t: 'light',\n          o: '#ff3d00'\n        };\n\n      case 'green':\n        return {\n          p: '#00c853',\n          s: '#008c3a',\n          a: '#54C800',\n          t: 'light',\n          o: '#d50000'\n        };\n\n      case 'light-green':\n        return {\n          p: '#64dd17',\n          s: '#469a10',\n          a: '#DDCB17',\n          t: 'dark',\n          o: '#c51162'\n        };\n\n      case 'lime':\n        return {\n          p: '#aeea00',\n          s: '#79a300',\n          a: '#EABC00',\n          t: 'dark',\n          o: '#aa00ff'\n        };\n\n      case 'yellow':\n        return {\n          p: '#ffd600',\n          s: '#b29500',\n          a: '#FF9000',\n          t: 'dark',\n          o: '#6200ea'\n        };\n\n      case 'amber':\n        return {\n          p: '#ffab00',\n          s: '#b27700',\n          a: '#FF5100',\n          t: 'dark',\n          o: '#304ffe'\n        };\n\n      case 'orange':\n        return {\n          p: '#ff6d00',\n          s: '#b24c00',\n          a: '#FF0A00',\n          t: 'light',\n          o: '#2962ff'\n        };\n\n      case 'deep-orange':\n        return {\n          p: '#ff3d00',\n          s: '#b22a00',\n          a: '#FF0084',\n          t: 'light',\n          o: '#0091ea'\n        };\n\n      case 'brown':\n        return {\n          p: '#795548',\n          s: '#543b32',\n          a: '#79485D',\n          t: 'light',\n          o: '#607d8b'\n        };\n\n      case 'grey':\n        return {\n          p: '#9e9e9e',\n          s: '#6e6e6e',\n          a: '#9e9e9e',\n          t: 'light',\n          o: '#000000'\n        };\n\n      case 'blue-grey':\n        return {\n          p: '#607d8b',\n          s: '#435761',\n          a: '#608B7A',\n          t: 'light',\n          o: '#795548'\n        };\n\n      case 'black':\n        return {\n          p: '#000000',\n          s: '#333333',\n          a: '#435761',\n          t: 'light',\n          o: '#ffffff'\n        };\n\n      case 'white':\n        return {\n          p: '#ffffff',\n          s: '#6e6e6e',\n          a: '#608b84',\n          t: 'dark',\n          o: '#000000'\n        };\n\n      default:\n        return {\n          p: color,\n          s: color,\n          a: '#304ffe',\n          t: 'light',\n          o: '#ffab00'\n        };\n    }\n  }\n\n  return {\n    p: '#ffffff',\n    s: '#6e6e6e',\n    a: '#608b84',\n    t: 'dark',\n    o: '#000000'\n  };\n} // Get connector location\n\n\nfunction GetConnectorLoc(p, loc) {\n  var base_offset = 100;\n  var location = {\n    x: p.x,\n    y: p.y,\n    offsetX: 0,\n    offsetY: 0\n  };\n\n  switch (loc[0]) {\n    case 't':\n      location.x += Math.round(p.width / 2);\n      location.offsetY = -base_offset;\n      break;\n\n    case 'l':\n      location.y += Math.round(p.height / 2);\n      location.offsetX = -base_offset;\n      break;\n\n    case 'r':\n      location.x += p.width;\n      location.y += Math.round(p.height / 2);\n      location.offsetX = base_offset;\n      break;\n\n    case 'b':\n      location.x += Math.round(p.width / 2);\n      location.y += p.height;\n      location.offsetY = base_offset;\n      break;\n\n    default:\n      location.x += Math.round(p.width / 2);\n      location.y += Math.round(p.height / 2);\n  }\n\n  return location;\n} // Checking wether connection crashes with other flowpoints\n\n\nfunction DoCrash(p1, p2, key1, key2, allPositions) {\n  // Helpers\n  var docrash = false;\n  var a = (p2.y - p1.y) / (p2.x - p1.x);\n  var b = p1.y - a * p1.x;\n\n  function getx(y) {\n    return (y - b) / a;\n  }\n\n  function gety(x) {\n    return a * x + b;\n  } // Testing all positions\n\n\n  Object.keys(allPositions).map(function (key) {\n    if (key !== key1 && key !== key2) {\n      if (!docrash) {\n        // Loop specifics\n        var pt = allPositions[key];\n        var x1 = getx(pt.y);\n        var x2 = getx(pt.y + pt.height);\n        var y1 = gety(pt.x);\n        var y2 = gety(pt.x + pt.width);\n        var p1x = p1.x + p1.offsetX;\n        var p1y = p1.y + p1.offsetY;\n        var p2x = p2.x + p2.offsetX;\n        var p2y = p2.y + p2.offsetY; // Perfectly lined up?\n\n        if (Math.abs(p1.x - p2.x) < 1) {\n          if (pt.x < p1.x && p1.x < pt.x + pt.width) {\n            if (Math.min(p1.y, p2.y) <= pt.y && pt.y <= Math.max(p1.y, p2.y)) {\n              docrash = true;\n            }\n          }\n        } // Passing through box?\n\n\n        if (Math.min(p1x, p2x) < pt.x + pt.width && pt.x < Math.max(p1x, p2x) && Math.min(p1y, p2y) < pt.y + pt.height && pt.y < Math.max(p1y, p2y)) {\n          if (pt.x <= x1 && x1 <= pt.x + pt.width) docrash = true;\n          if (pt.x <= x2 && x2 <= pt.x + pt.width) docrash = true;\n          if (pt.y <= y1 && y1 <= pt.y + pt.height) docrash = true;\n          if (pt.y <= y2 && y2 <= pt.y + pt.height) docrash = true;\n        }\n\n        if (Math.min(p1.x, p2.x) < pt.x + pt.width && pt.x < Math.max(p1.x, p2.x) && Math.min(p1.y, p2.y) < pt.y + pt.height && pt.y < Math.max(p1.y, p2.y)) {\n          if (pt.x <= x1 && x1 <= pt.x + pt.width) docrash = true;\n          if (pt.x <= x2 && x2 <= pt.x + pt.width) docrash = true;\n          if (pt.y <= y1 && y1 <= pt.y + pt.height) docrash = true;\n          if (pt.y <= y2 && y2 <= pt.y + pt.height) docrash = true;\n        }\n      }\n    }\n  }); // Returning\n\n  return docrash;\n} // Auto connector locations\n\n\nfunction AutoGetLoc(pa, pb, aLoc, bLoc, key1, key2, allPositions, avoidCollisions) {\n  var newLocs = {\n    output: null,\n    input: null\n  };\n\n  if (aLoc === 'auto' || bLoc === 'auto') {\n    var positions = ['top', 'right', 'left', 'bottom'];\n    var best = {\n      d: Infinity,\n      output: null,\n      input: null\n    };\n    var bestNoCrash = {\n      d: Infinity,\n      output: null,\n      input: null\n    };\n    positions.map(function (posA) {\n      var p1 = GetConnectorLoc(pa, posA);\n      positions.map(function (posB) {\n        var p2 = GetConnectorLoc(pb, posB);\n        var d = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n\n        if (d < best.d) {\n          best.d = d;\n          best.output = p1;\n          best.input = p2;\n        }\n\n        if (avoidCollisions) {\n          if (d < bestNoCrash.d && !DoCrash(p1, p2, key1, key2, allPositions)) {\n            bestNoCrash.d = d;\n            bestNoCrash.output = p1;\n            bestNoCrash.input = p2;\n          }\n        }\n      });\n    });\n    newLocs.output = aLoc === 'auto' ? bestNoCrash.d !== Infinity ? bestNoCrash.output : best.output : GetConnectorLoc(pa, aLoc);\n    newLocs.input = bLoc === 'auto' ? bestNoCrash.d !== Infinity ? bestNoCrash.input : best.input : GetConnectorLoc(pb, bLoc);\n  } else {\n    newLocs.output = GetConnectorLoc(pa, aLoc);\n    newLocs.input = GetConnectorLoc(pb, bLoc);\n  }\n\n  return newLocs;\n}","map":{"version":3,"sources":["C:/Users/Abdullah/personal-portfolio/node_modules/flowpoints/dist/Helpers.js"],"names":["Object","defineProperty","exports","value","CalcPos","getColor","AutoGetLoc","pos","snap","minimum","Math","max","round","color","p","s","a","t","o","GetConnectorLoc","loc","base_offset","location","x","y","offsetX","offsetY","width","height","DoCrash","p1","p2","key1","key2","allPositions","docrash","b","getx","gety","keys","map","key","pt","x1","x2","y1","y2","p1x","p1y","p2x","p2y","abs","min","pa","pb","aLoc","bLoc","avoidCollisions","newLocs","output","input","positions","best","d","Infinity","bestNoCrash","posA","posB","sqrt","pow"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CalcPos = CalcPos;\nexports.getColor = getColor;\nexports.AutoGetLoc = AutoGetLoc;\n// Helps calculate new positions on drag\nfunction CalcPos(pos, snap, minimum) {\n  return Math.max(minimum, Math.round(pos + snap - pos % snap));\n}\n\n// Colors\nfunction getColor(color) {\n\n  if (color) {\n    switch (color) {\n      case 'red':\n        return { p: '#d50000', s: '#950000', a: '#AE00D5', t: 'light', o: '#00c853' };\n      case 'pink':\n        return { p: '#c51162', s: '#890b44', a: '#7811C5', t: 'light', o: '#64dd17' };\n      case 'purple':\n        return { p: '#aa00ff', s: '#7600b2', a: '#000FFF', t: 'light', o: '#aeea00' };\n      case 'deep-purple':\n        return { p: '#6200ea', s: '#4400a3', a: '#0046EA', t: 'light', o: '#ffd600' };\n      case 'indigo':\n        return { p: '#304ffe', s: '#2137b1', a: '#30E0FE', t: 'light', o: '#ffab00' };\n      case 'blue':\n        return { p: '#2962ff', s: '#1c44b2', a: '#29F9FF', t: 'light', o: '#ff6d00' };\n      case 'light-blue':\n        return { p: '#0091ea', s: '#0065a3', a: '#00EA99', t: 'light', o: '#ff3d00' };\n      case 'green':\n        return { p: '#00c853', s: '#008c3a', a: '#54C800', t: 'light', o: '#d50000' };\n      case 'light-green':\n        return { p: '#64dd17', s: '#469a10', a: '#DDCB17', t: 'dark', o: '#c51162' };\n      case 'lime':\n        return { p: '#aeea00', s: '#79a300', a: '#EABC00', t: 'dark', o: '#aa00ff' };\n      case 'yellow':\n        return { p: '#ffd600', s: '#b29500', a: '#FF9000', t: 'dark', o: '#6200ea' };\n      case 'amber':\n        return { p: '#ffab00', s: '#b27700', a: '#FF5100', t: 'dark', o: '#304ffe' };\n      case 'orange':\n        return { p: '#ff6d00', s: '#b24c00', a: '#FF0A00', t: 'light', o: '#2962ff' };\n      case 'deep-orange':\n        return { p: '#ff3d00', s: '#b22a00', a: '#FF0084', t: 'light', o: '#0091ea' };\n      case 'brown':\n        return { p: '#795548', s: '#543b32', a: '#79485D', t: 'light', o: '#607d8b' };\n      case 'grey':\n        return { p: '#9e9e9e', s: '#6e6e6e', a: '#9e9e9e', t: 'light', o: '#000000' };\n      case 'blue-grey':\n        return { p: '#607d8b', s: '#435761', a: '#608B7A', t: 'light', o: '#795548' };\n      case 'black':\n        return { p: '#000000', s: '#333333', a: '#435761', t: 'light', o: '#ffffff' };\n      case 'white':\n        return { p: '#ffffff', s: '#6e6e6e', a: '#608b84', t: 'dark', o: '#000000' };\n      default:\n        return { p: color, s: color, a: '#304ffe', t: 'light', o: '#ffab00' };\n    }\n  }\n\n  return { p: '#ffffff', s: '#6e6e6e', a: '#608b84', t: 'dark', o: '#000000' };\n}\n\n// Get connector location\nfunction GetConnectorLoc(p, loc) {\n  var base_offset = 100;\n  var location = {\n    x: p.x,\n    y: p.y,\n    offsetX: 0,\n    offsetY: 0\n  };\n  switch (loc[0]) {\n    case 't':\n      location.x += Math.round(p.width / 2);\n      location.offsetY = -base_offset;\n      break;\n    case 'l':\n      location.y += Math.round(p.height / 2);\n      location.offsetX = -base_offset;\n      break;\n    case 'r':\n      location.x += p.width;\n      location.y += Math.round(p.height / 2);\n      location.offsetX = base_offset;\n      break;\n    case 'b':\n      location.x += Math.round(p.width / 2);\n      location.y += p.height;\n      location.offsetY = base_offset;\n      break;\n    default:\n      location.x += Math.round(p.width / 2);\n      location.y += Math.round(p.height / 2);\n  }\n  return location;\n}\n\n// Checking wether connection crashes with other flowpoints\nfunction DoCrash(p1, p2, key1, key2, allPositions) {\n\n  // Helpers\n  var docrash = false;\n  var a = (p2.y - p1.y) / (p2.x - p1.x);\n  var b = p1.y - a * p1.x;\n  function getx(y) {\n    return (y - b) / a;\n  }\n  function gety(x) {\n    return a * x + b;\n  }\n\n  // Testing all positions\n  Object.keys(allPositions).map(function (key) {\n    if (key !== key1 && key !== key2) {\n      if (!docrash) {\n\n        // Loop specifics\n        var pt = allPositions[key];\n        var x1 = getx(pt.y);\n        var x2 = getx(pt.y + pt.height);\n        var y1 = gety(pt.x);\n        var y2 = gety(pt.x + pt.width);\n        var p1x = p1.x + p1.offsetX;\n        var p1y = p1.y + p1.offsetY;\n        var p2x = p2.x + p2.offsetX;\n        var p2y = p2.y + p2.offsetY;\n\n        // Perfectly lined up?\n        if (Math.abs(p1.x - p2.x) < 1) {\n          if (pt.x < p1.x && p1.x < pt.x + pt.width) {\n            if (Math.min(p1.y, p2.y) <= pt.y && pt.y <= Math.max(p1.y, p2.y)) {\n              docrash = true;\n            }\n          }\n        }\n\n        // Passing through box?\n        if (Math.min(p1x, p2x) < pt.x + pt.width && pt.x < Math.max(p1x, p2x) && Math.min(p1y, p2y) < pt.y + pt.height && pt.y < Math.max(p1y, p2y)) {\n          if (pt.x <= x1 && x1 <= pt.x + pt.width) docrash = true;\n          if (pt.x <= x2 && x2 <= pt.x + pt.width) docrash = true;\n          if (pt.y <= y1 && y1 <= pt.y + pt.height) docrash = true;\n          if (pt.y <= y2 && y2 <= pt.y + pt.height) docrash = true;\n        }\n        if (Math.min(p1.x, p2.x) < pt.x + pt.width && pt.x < Math.max(p1.x, p2.x) && Math.min(p1.y, p2.y) < pt.y + pt.height && pt.y < Math.max(p1.y, p2.y)) {\n          if (pt.x <= x1 && x1 <= pt.x + pt.width) docrash = true;\n          if (pt.x <= x2 && x2 <= pt.x + pt.width) docrash = true;\n          if (pt.y <= y1 && y1 <= pt.y + pt.height) docrash = true;\n          if (pt.y <= y2 && y2 <= pt.y + pt.height) docrash = true;\n        }\n      }\n    }\n  });\n\n  // Returning\n  return docrash;\n}\n\n// Auto connector locations\nfunction AutoGetLoc(pa, pb, aLoc, bLoc, key1, key2, allPositions, avoidCollisions) {\n  var newLocs = {\n    output: null,\n    input: null\n  };\n  if (aLoc === 'auto' || bLoc === 'auto') {\n    var positions = ['top', 'right', 'left', 'bottom'];\n    var best = {\n      d: Infinity,\n      output: null,\n      input: null\n    };\n    var bestNoCrash = {\n      d: Infinity,\n      output: null,\n      input: null\n    };\n    positions.map(function (posA) {\n      var p1 = GetConnectorLoc(pa, posA);\n      positions.map(function (posB) {\n\n        var p2 = GetConnectorLoc(pb, posB);\n        var d = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n        if (d < best.d) {\n          best.d = d;\n          best.output = p1;\n          best.input = p2;\n        }\n\n        if (avoidCollisions) {\n          if (d < bestNoCrash.d && !DoCrash(p1, p2, key1, key2, allPositions)) {\n            bestNoCrash.d = d;\n            bestNoCrash.output = p1;\n            bestNoCrash.input = p2;\n          }\n        }\n      });\n    });\n    newLocs.output = aLoc === 'auto' ? bestNoCrash.d !== Infinity ? bestNoCrash.output : best.output : GetConnectorLoc(pa, aLoc);\n    newLocs.input = bLoc === 'auto' ? bestNoCrash.d !== Infinity ? bestNoCrash.input : best.input : GetConnectorLoc(pb, bLoc);\n  } else {\n    newLocs.output = GetConnectorLoc(pa, aLoc);\n    newLocs.input = GetConnectorLoc(pb, bLoc);\n  }\n  return newLocs;\n}"]},"metadata":{},"sourceType":"script"}