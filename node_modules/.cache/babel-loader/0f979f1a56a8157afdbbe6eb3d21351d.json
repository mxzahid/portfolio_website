{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/button.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport devices from \"../core/devices\";\nimport { render } from \"./widget/utils.ink_ripple\";\nimport registerComponent from \"../core/component_registrator\";\nimport { isMaterial, current } from \"./themes\";\nimport Action from \"../core/action\";\nimport ValidationEngine from \"./validation_engine\";\nimport Widget from \"./widget/ui.widget\";\nimport { active as activeEvents, click as clickEvent, dxClick as dxClickEvent } from \"../events/short\";\nimport { extend } from \"../core/utils/extend\";\nimport { FunctionTemplate } from \"../core/templates/function_template\";\nimport { getImageContainer, getImageSourceType } from \"../core/utils/icon\";\nimport { getPublicElement } from \"../core/element\";\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\n\nclass Button extends Widget {\n  constructor() {\n    super(...arguments);\n    this._feedbackHideTimeout = 100;\n  }\n\n  _$content() {\n    return this.$element().find(\".dx-button-content\");\n  }\n\n  _$submitInput() {\n    return this.$element().find(\".dx-button-submit-input\");\n  }\n\n  _attachActiveEvents(active, inactive) {\n    var $el = this._eventBindingTarget();\n\n    var selector = this._activeStateUnit;\n    activeEvents.off($el, {\n      namespace: \"inkRipple\",\n      selector: selector\n    });\n    activeEvents.on($el, new Action(active), new Action(inactive, {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    }), {\n      showTimeout: this._feedbackShowTimeout,\n      hideTimeout: this._feedbackHideTimeout,\n      selector: selector,\n      namespace: \"inkRipple\"\n    });\n  }\n\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: () => isMaterial(current()),\n      options: {\n        useInkRipple: true\n      }\n    }]);\n  }\n\n  _executeClickAction(event) {\n    this._clickAction({\n      validationGroup: this._validationGroupConfig,\n      event: event\n    });\n  }\n\n  _findGroup() {\n    var $element = this.$element();\n\n    var model = this._modelByElement($element);\n\n    var {\n      validationGroup: validationGroup\n    } = this.option();\n    return validationGroup || ValidationEngine.findGroup($element, model);\n  }\n\n  _getContentData() {\n    var {\n      icon: icon,\n      text: text,\n      type: type,\n      _templateData: _templateData\n    } = this.option();\n    return extend({\n      icon: \"back\" === type && !icon ? \"back\" : icon,\n      text: text\n    }, _templateData);\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      hoverStateEnabled: true,\n      onClick: null,\n      type: \"normal\",\n      text: \"\",\n      icon: \"\",\n      iconPosition: \"left\",\n      validationGroup: void 0,\n      activeStateEnabled: true,\n      template: \"content\",\n      useSubmitBehavior: false,\n      useInkRipple: false,\n      _templateData: {},\n      stylingMode: \"contained\"\n    });\n  }\n\n  _getSubmitAction() {\n    var needValidate = true;\n    var validationStatus = \"valid\";\n    return this._createAction(_ref => {\n      var {\n        event: event\n      } = _ref;\n\n      if (needValidate) {\n        var validationGroup = this._validationGroupConfig;\n\n        if (validationGroup) {\n          var {\n            status: status,\n            complete: complete\n          } = validationGroup.validate();\n          validationStatus = status;\n\n          if (\"pending\" === status) {\n            needValidate = false;\n            this.option(\"disabled\", true);\n            complete.then(_ref2 => {\n              var {\n                status: status\n              } = _ref2;\n              this.option(\"disabled\", false);\n              validationStatus = status;\n              \"valid\" === validationStatus && this._submitInput().click();\n              needValidate = true;\n            });\n          }\n        }\n      }\n\n      \"valid\" !== validationStatus && event.preventDefault();\n      event.stopPropagation();\n    });\n  }\n\n  _initMarkup() {\n    this.$element().addClass(\"dx-button\");\n\n    this._renderType();\n\n    this._renderStylingMode();\n\n    this._renderInkRipple();\n\n    this._renderClick();\n\n    this._updateAriaLabel();\n\n    super._initMarkup();\n\n    this._updateContent();\n\n    this.setAria(\"role\", \"button\");\n  }\n\n  _getAnonymousTemplateName() {\n    return ANONYMOUS_TEMPLATE_NAME;\n  }\n\n  _initTemplates() {\n    this._templateManager.addDefaultTemplates({\n      content: new FunctionTemplate(_ref3 => {\n        var {\n          model = {},\n          container: container\n        } = _ref3;\n        var {\n          text: text,\n          icon: icon\n        } = model;\n        var {\n          iconPosition: iconPosition\n        } = this.option();\n        var $icon = getImageContainer(icon);\n        var $textContainer = text && $(\"<span>\").text(text).addClass(\"dx-button-text\");\n        var $container = $(container);\n        $container.append($textContainer);\n\n        if (\"left\" === iconPosition) {\n          $container.prepend($icon);\n        } else {\n          $icon.addClass(\"dx-icon-right\");\n          $container.append($icon);\n        }\n      })\n    });\n\n    super._initTemplates();\n  }\n\n  _optionChanged(args) {\n    var {\n      name: name\n    } = args;\n\n    switch (name) {\n      case \"onClick\":\n        this._updateClick();\n\n        break;\n\n      case \"icon\":\n      case \"text\":\n        this._updateContent();\n\n        this._updateAriaLabel();\n\n        break;\n\n      case \"type\":\n        this._updateType();\n\n        this._updateContent();\n\n        break;\n\n      case \"_templateData\":\n        break;\n\n      case \"template\":\n      case \"iconPosition\":\n        this._updateContent();\n\n        break;\n\n      case \"stylingMode\":\n        this._updateStylingMode();\n\n        break;\n\n      case \"useSubmitBehavior\":\n        this._updateSubmitInput();\n\n        break;\n\n      case \"useInkRipple\":\n        this._invalidate();\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _renderClick() {\n    var $el = this.$element();\n    dxClickEvent.off($el, {\n      namespace: this.NAME\n    });\n    dxClickEvent.on($el, event => this._executeClickAction(event), {\n      namespace: this.NAME\n    });\n\n    this._updateClick();\n  }\n\n  _renderInkRipple() {\n    var {\n      text: text,\n      icon: icon,\n      type: type,\n      useInkRipple: useInkRipple\n    } = this.option();\n\n    if (useInkRipple) {\n      var isOnlyIconButton = !text && icon || \"back\" === type;\n\n      var _inkRipple = render(isOnlyIconButton ? {\n        waveSizeCoefficient: 1,\n        useHoldAnimation: false,\n        isCentered: true\n      } : {});\n\n      var changeWaveVisibility = (event, visible) => {\n        var {\n          activeStateEnabled: activeStateEnabled,\n          useInkRipple: useInkRipple\n        } = this.option();\n\n        if (useInkRipple && activeStateEnabled && !this._disposed) {\n          var config = {\n            element: this._$content(),\n            event: event\n          };\n          visible ? _inkRipple.showWave(config) : _inkRipple.hideWave(config);\n        }\n      };\n\n      this._attachActiveEvents(_ref4 => {\n        var {\n          event: event\n        } = _ref4;\n        return changeWaveVisibility(event, true);\n      }, _ref5 => {\n        var {\n          event: event\n        } = _ref5;\n        return changeWaveVisibility(event);\n      });\n    }\n  }\n\n  _renderStylingMode() {\n    var $element = this.$element();\n    var {\n      stylingMode: stylingMode\n    } = this.option();\n\n    if (-1 === [\"contained\", \"text\", \"outlined\"].indexOf(stylingMode)) {\n      stylingMode = this._getDefaultOptions().stylingMode;\n    }\n\n    $element.addClass(\"dx-button-mode-\".concat(stylingMode));\n  }\n\n  _renderSubmitInput() {\n    var {\n      useSubmitBehavior: useSubmitBehavior\n    } = this.option();\n\n    if (useSubmitBehavior) {\n      var submitAction = this._getSubmitAction();\n\n      var $content = this._$content();\n\n      $(\"<input>\").attr(\"type\", \"submit\").attr(\"tabindex\", -1).addClass(\"dx-button-submit-input\").appendTo($content);\n      clickEvent.on(this._$submitInput(), event => submitAction({\n        event: event\n      }));\n    }\n  }\n\n  _renderType() {\n    var {\n      type: type\n    } = this.option();\n    var $element = this.$element();\n    type && $element.addClass(\"dx-button-\".concat(type));\n  }\n\n  _submitInput() {\n    return this._$submitInput().get(0);\n  }\n\n  _supportedKeys() {\n    var click = e => {\n      e.preventDefault();\n\n      this._executeClickAction(e);\n    };\n\n    return extend(super._supportedKeys(), {\n      space: click,\n      enter: click\n    });\n  }\n\n  _updateAriaLabel() {\n    var ariaTarget = this._getAriaTarget();\n\n    var {\n      icon: icon,\n      text: text\n    } = this.option();\n\n    if (!text) {\n      if (\"image\" === getImageSourceType(icon)) {\n        icon = -1 === icon.indexOf(\"base64\") ? icon.replace(/.+\\/([^.]+)\\..+$/, \"$1\") : \"Base64\";\n      }\n\n      text = icon || \"\";\n    }\n\n    ariaTarget.attr(\"aria-label\", text || null);\n  }\n\n  _updateClick() {\n    this._clickAction = this._createActionByOption(\"onClick\", {\n      excludeValidators: [\"readOnly\"],\n      afterExecute: () => {\n        var {\n          useSubmitBehavior: useSubmitBehavior\n        } = this.option();\n        useSubmitBehavior && setTimeout(() => this._submitInput().click());\n      }\n    });\n  }\n\n  _updateContent() {\n    var $element = this.$element();\n\n    var $content = this._$content();\n\n    var data = this._getContentData();\n\n    var {\n      template: template,\n      iconPosition: iconPosition\n    } = this.option();\n    var {\n      icon: icon,\n      text: text\n    } = data;\n    $content.length ? $content.empty() : $content = $(\"<div>\").addClass(\"dx-button-content\").appendTo($element);\n    $element.toggleClass(\"dx-button-has-icon\", !!icon).toggleClass(\"dx-button-icon-right\", !!icon && \"left\" !== iconPosition).toggleClass(\"dx-button-has-text\", !!text);\n    var $template = $(this._getTemplateByOption(\"template\").render({\n      model: data,\n      container: getPublicElement($content),\n      transclude: this._templateManager.anonymousTemplateName === template\n    }));\n\n    if ($template.hasClass(\"dx-template-wrapper\")) {\n      $template.addClass(\"dx-button-content\");\n      $content.replaceWith($template);\n    }\n\n    this._updateSubmitInput();\n  }\n\n  _updateSubmitInput() {\n    var {\n      useSubmitBehavior: useSubmitBehavior\n    } = this.option();\n\n    var $submitInput = this._$submitInput();\n\n    if (!useSubmitBehavior && $submitInput.length) {\n      $submitInput.remove();\n    } else if (useSubmitBehavior && !$submitInput.length) {\n      this._renderSubmitInput();\n    }\n  }\n\n  _updateStylingMode() {\n    var $element = this.$element();\n    [\"contained\", \"text\", \"outlined\"].map(mode => \"dx-button-mode-\".concat(mode)).forEach($element.removeClass.bind($element));\n\n    this._renderStylingMode();\n  }\n\n  _updateType() {\n    var $element = this.$element();\n    [\"back\", \"danger\", \"default\", \"normal\", \"success\"].map(type => \"dx-button-\".concat(type)).forEach($element.removeClass.bind($element));\n\n    this._renderType();\n  }\n\n  get _validationGroupConfig() {\n    return ValidationEngine.getGroupConfig(this._findGroup());\n  }\n\n}\n\nregisterComponent(\"dxButton\", Button);\nexport default Button;","map":{"version":3,"sources":["C:/Users/Abdullah/personal-portfolio/node_modules/devextreme/esm/ui/button.js"],"names":["$","devices","render","registerComponent","isMaterial","current","Action","ValidationEngine","Widget","active","activeEvents","click","clickEvent","dxClick","dxClickEvent","extend","FunctionTemplate","getImageContainer","getImageSourceType","getPublicElement","ANONYMOUS_TEMPLATE_NAME","Button","constructor","arguments","_feedbackHideTimeout","_$content","$element","find","_$submitInput","_attachActiveEvents","inactive","$el","_eventBindingTarget","selector","_activeStateUnit","off","namespace","on","excludeValidators","showTimeout","_feedbackShowTimeout","hideTimeout","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","focusStateEnabled","useInkRipple","_executeClickAction","event","_clickAction","validationGroup","_validationGroupConfig","_findGroup","model","_modelByElement","option","findGroup","_getContentData","icon","text","type","_templateData","_getDefaultOptions","hoverStateEnabled","onClick","iconPosition","activeStateEnabled","template","useSubmitBehavior","stylingMode","_getSubmitAction","needValidate","validationStatus","_createAction","_ref","status","complete","validate","then","_ref2","_submitInput","preventDefault","stopPropagation","_initMarkup","addClass","_renderType","_renderStylingMode","_renderInkRipple","_renderClick","_updateAriaLabel","_updateContent","setAria","_getAnonymousTemplateName","_initTemplates","_templateManager","addDefaultTemplates","content","_ref3","container","$icon","$textContainer","$container","append","prepend","_optionChanged","args","name","_updateClick","_updateType","_updateStylingMode","_updateSubmitInput","_invalidate","NAME","isOnlyIconButton","_inkRipple","waveSizeCoefficient","useHoldAnimation","isCentered","changeWaveVisibility","visible","_disposed","config","element","showWave","hideWave","_ref4","_ref5","indexOf","_renderSubmitInput","submitAction","$content","attr","appendTo","get","_supportedKeys","e","space","enter","ariaTarget","_getAriaTarget","replace","_createActionByOption","afterExecute","setTimeout","data","length","empty","toggleClass","$template","_getTemplateByOption","transclude","anonymousTemplateName","hasClass","replaceWith","$submitInput","remove","map","mode","forEach","removeClass","bind","getGroupConfig"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/button.js)\r\n * Version: 21.1.4\r\n * Build date: Mon Jun 21 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    render\r\n} from \"./widget/utils.ink_ripple\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    isMaterial,\r\n    current\r\n} from \"./themes\";\r\nimport Action from \"../core/action\";\r\nimport ValidationEngine from \"./validation_engine\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    active as activeEvents,\r\n    click as clickEvent,\r\n    dxClick as dxClickEvent\r\n} from \"../events/short\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport {\r\n    getImageContainer,\r\n    getImageSourceType\r\n} from \"../core/utils/icon\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nclass Button extends Widget {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._feedbackHideTimeout = 100\r\n    }\r\n    _$content() {\r\n        return this.$element().find(\".dx-button-content\")\r\n    }\r\n    _$submitInput() {\r\n        return this.$element().find(\".dx-button-submit-input\")\r\n    }\r\n    _attachActiveEvents(active, inactive) {\r\n        var $el = this._eventBindingTarget();\r\n        var selector = this._activeStateUnit;\r\n        activeEvents.off($el, {\r\n            namespace: \"inkRipple\",\r\n            selector: selector\r\n        });\r\n        activeEvents.on($el, new Action(active), new Action(inactive, {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        }), {\r\n            showTimeout: this._feedbackShowTimeout,\r\n            hideTimeout: this._feedbackHideTimeout,\r\n            selector: selector,\r\n            namespace: \"inkRipple\"\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: () => isMaterial(current()),\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    }\r\n    _executeClickAction(event) {\r\n        this._clickAction({\r\n            validationGroup: this._validationGroupConfig,\r\n            event: event\r\n        })\r\n    }\r\n    _findGroup() {\r\n        var $element = this.$element();\r\n        var model = this._modelByElement($element);\r\n        var {\r\n            validationGroup: validationGroup\r\n        } = this.option();\r\n        return validationGroup || ValidationEngine.findGroup($element, model)\r\n    }\r\n    _getContentData() {\r\n        var {\r\n            icon: icon,\r\n            text: text,\r\n            type: type,\r\n            _templateData: _templateData\r\n        } = this.option();\r\n        return extend({\r\n            icon: \"back\" === type && !icon ? \"back\" : icon,\r\n            text: text\r\n        }, _templateData)\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            hoverStateEnabled: true,\r\n            onClick: null,\r\n            type: \"normal\",\r\n            text: \"\",\r\n            icon: \"\",\r\n            iconPosition: \"left\",\r\n            validationGroup: void 0,\r\n            activeStateEnabled: true,\r\n            template: \"content\",\r\n            useSubmitBehavior: false,\r\n            useInkRipple: false,\r\n            _templateData: {},\r\n            stylingMode: \"contained\"\r\n        })\r\n    }\r\n    _getSubmitAction() {\r\n        var needValidate = true;\r\n        var validationStatus = \"valid\";\r\n        return this._createAction(_ref => {\r\n            var {\r\n                event: event\r\n            } = _ref;\r\n            if (needValidate) {\r\n                var validationGroup = this._validationGroupConfig;\r\n                if (validationGroup) {\r\n                    var {\r\n                        status: status,\r\n                        complete: complete\r\n                    } = validationGroup.validate();\r\n                    validationStatus = status;\r\n                    if (\"pending\" === status) {\r\n                        needValidate = false;\r\n                        this.option(\"disabled\", true);\r\n                        complete.then(_ref2 => {\r\n                            var {\r\n                                status: status\r\n                            } = _ref2;\r\n                            this.option(\"disabled\", false);\r\n                            validationStatus = status;\r\n                            \"valid\" === validationStatus && this._submitInput().click();\r\n                            needValidate = true\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \"valid\" !== validationStatus && event.preventDefault();\r\n            event.stopPropagation()\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(\"dx-button\");\r\n        this._renderType();\r\n        this._renderStylingMode();\r\n        this._renderInkRipple();\r\n        this._renderClick();\r\n        this._updateAriaLabel();\r\n        super._initMarkup();\r\n        this._updateContent();\r\n        this.setAria(\"role\", \"button\")\r\n    }\r\n    _getAnonymousTemplateName() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    }\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(_ref3 => {\r\n                var {\r\n                    model: model = {},\r\n                    container: container\r\n                } = _ref3;\r\n                var {\r\n                    text: text,\r\n                    icon: icon\r\n                } = model;\r\n                var {\r\n                    iconPosition: iconPosition\r\n                } = this.option();\r\n                var $icon = getImageContainer(icon);\r\n                var $textContainer = text && $(\"<span>\").text(text).addClass(\"dx-button-text\");\r\n                var $container = $(container);\r\n                $container.append($textContainer);\r\n                if (\"left\" === iconPosition) {\r\n                    $container.prepend($icon)\r\n                } else {\r\n                    $icon.addClass(\"dx-icon-right\");\r\n                    $container.append($icon)\r\n                }\r\n            })\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name\r\n        } = args;\r\n        switch (name) {\r\n            case \"onClick\":\r\n                this._updateClick();\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._updateContent();\r\n                this._updateAriaLabel();\r\n                break;\r\n            case \"type\":\r\n                this._updateType();\r\n                this._updateContent();\r\n                break;\r\n            case \"_templateData\":\r\n                break;\r\n            case \"template\":\r\n            case \"iconPosition\":\r\n                this._updateContent();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._updateStylingMode();\r\n                break;\r\n            case \"useSubmitBehavior\":\r\n                this._updateSubmitInput();\r\n                break;\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _renderClick() {\r\n        var $el = this.$element();\r\n        dxClickEvent.off($el, {\r\n            namespace: this.NAME\r\n        });\r\n        dxClickEvent.on($el, event => this._executeClickAction(event), {\r\n            namespace: this.NAME\r\n        });\r\n        this._updateClick()\r\n    }\r\n    _renderInkRipple() {\r\n        var {\r\n            text: text,\r\n            icon: icon,\r\n            type: type,\r\n            useInkRipple: useInkRipple\r\n        } = this.option();\r\n        if (useInkRipple) {\r\n            var isOnlyIconButton = !text && icon || \"back\" === type;\r\n            var _inkRipple = render(isOnlyIconButton ? {\r\n                waveSizeCoefficient: 1,\r\n                useHoldAnimation: false,\r\n                isCentered: true\r\n            } : {});\r\n            var changeWaveVisibility = (event, visible) => {\r\n                var {\r\n                    activeStateEnabled: activeStateEnabled,\r\n                    useInkRipple: useInkRipple\r\n                } = this.option();\r\n                if (useInkRipple && activeStateEnabled && !this._disposed) {\r\n                    var config = {\r\n                        element: this._$content(),\r\n                        event: event\r\n                    };\r\n                    visible ? _inkRipple.showWave(config) : _inkRipple.hideWave(config)\r\n                }\r\n            };\r\n            this._attachActiveEvents(_ref4 => {\r\n                var {\r\n                    event: event\r\n                } = _ref4;\r\n                return changeWaveVisibility(event, true)\r\n            }, _ref5 => {\r\n                var {\r\n                    event: event\r\n                } = _ref5;\r\n                return changeWaveVisibility(event)\r\n            })\r\n        }\r\n    }\r\n    _renderStylingMode() {\r\n        var $element = this.$element();\r\n        var {\r\n            stylingMode: stylingMode\r\n        } = this.option();\r\n        if (-1 === [\"contained\", \"text\", \"outlined\"].indexOf(stylingMode)) {\r\n            stylingMode = this._getDefaultOptions().stylingMode\r\n        }\r\n        $element.addClass(\"dx-button-mode-\".concat(stylingMode))\r\n    }\r\n    _renderSubmitInput() {\r\n        var {\r\n            useSubmitBehavior: useSubmitBehavior\r\n        } = this.option();\r\n        if (useSubmitBehavior) {\r\n            var submitAction = this._getSubmitAction();\r\n            var $content = this._$content();\r\n            $(\"<input>\").attr(\"type\", \"submit\").attr(\"tabindex\", -1).addClass(\"dx-button-submit-input\").appendTo($content);\r\n            clickEvent.on(this._$submitInput(), event => submitAction({\r\n                event: event\r\n            }))\r\n        }\r\n    }\r\n    _renderType() {\r\n        var {\r\n            type: type\r\n        } = this.option();\r\n        var $element = this.$element();\r\n        type && $element.addClass(\"dx-button-\".concat(type))\r\n    }\r\n    _submitInput() {\r\n        return this._$submitInput().get(0)\r\n    }\r\n    _supportedKeys() {\r\n        var click = e => {\r\n            e.preventDefault();\r\n            this._executeClickAction(e)\r\n        };\r\n        return extend(super._supportedKeys(), {\r\n            space: click,\r\n            enter: click\r\n        })\r\n    }\r\n    _updateAriaLabel() {\r\n        var ariaTarget = this._getAriaTarget();\r\n        var {\r\n            icon: icon,\r\n            text: text\r\n        } = this.option();\r\n        if (!text) {\r\n            if (\"image\" === getImageSourceType(icon)) {\r\n                icon = -1 === icon.indexOf(\"base64\") ? icon.replace(/.+\\/([^.]+)\\..+$/, \"$1\") : \"Base64\"\r\n            }\r\n            text = icon || \"\"\r\n        }\r\n        ariaTarget.attr(\"aria-label\", text || null)\r\n    }\r\n    _updateClick() {\r\n        this._clickAction = this._createActionByOption(\"onClick\", {\r\n            excludeValidators: [\"readOnly\"],\r\n            afterExecute: () => {\r\n                var {\r\n                    useSubmitBehavior: useSubmitBehavior\r\n                } = this.option();\r\n                useSubmitBehavior && setTimeout(() => this._submitInput().click())\r\n            }\r\n        })\r\n    }\r\n    _updateContent() {\r\n        var $element = this.$element();\r\n        var $content = this._$content();\r\n        var data = this._getContentData();\r\n        var {\r\n            template: template,\r\n            iconPosition: iconPosition\r\n        } = this.option();\r\n        var {\r\n            icon: icon,\r\n            text: text\r\n        } = data;\r\n        $content.length ? $content.empty() : $content = $(\"<div>\").addClass(\"dx-button-content\").appendTo($element);\r\n        $element.toggleClass(\"dx-button-has-icon\", !!icon).toggleClass(\"dx-button-icon-right\", !!icon && \"left\" !== iconPosition).toggleClass(\"dx-button-has-text\", !!text);\r\n        var $template = $(this._getTemplateByOption(\"template\").render({\r\n            model: data,\r\n            container: getPublicElement($content),\r\n            transclude: this._templateManager.anonymousTemplateName === template\r\n        }));\r\n        if ($template.hasClass(\"dx-template-wrapper\")) {\r\n            $template.addClass(\"dx-button-content\");\r\n            $content.replaceWith($template)\r\n        }\r\n        this._updateSubmitInput()\r\n    }\r\n    _updateSubmitInput() {\r\n        var {\r\n            useSubmitBehavior: useSubmitBehavior\r\n        } = this.option();\r\n        var $submitInput = this._$submitInput();\r\n        if (!useSubmitBehavior && $submitInput.length) {\r\n            $submitInput.remove()\r\n        } else if (useSubmitBehavior && !$submitInput.length) {\r\n            this._renderSubmitInput()\r\n        }\r\n    }\r\n    _updateStylingMode() {\r\n        var $element = this.$element();\r\n        [\"contained\", \"text\", \"outlined\"].map(mode => \"dx-button-mode-\".concat(mode)).forEach($element.removeClass.bind($element));\r\n        this._renderStylingMode()\r\n    }\r\n    _updateType() {\r\n        var $element = this.$element();\r\n        [\"back\", \"danger\", \"default\", \"normal\", \"success\"].map(type => \"dx-button-\".concat(type)).forEach($element.removeClass.bind($element));\r\n        this._renderType()\r\n    }\r\n    get _validationGroupConfig() {\r\n        return ValidationEngine.getGroupConfig(this._findGroup())\r\n    }\r\n}\r\nregisterComponent(\"dxButton\", Button);\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}